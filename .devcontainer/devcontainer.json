{
    "name": "Python Dev Container",
    "image": "mcr.microsoft.com/devcontainers/python:3.11",
    "features": {
        "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
            "version": "latest"
        }
    },
    "postCreateCommand": "curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - && sudo apt-get install -y nodejs && bash .devcontainer/setup.sh && ollama pull deepseek-coder-v2:latest nomic-embed-text:latest qwen2.5-coder:7b qwen2.5-coder:1.5b llama3.1:latest",
    "customizations": {
        "vscode": {
            "settings": {
                "files.autoSave": "onFocusChange",
                "files.autoSaveDelay": 3000,
                "editor.formatOnSave": true,
                "[python]": {
                    "editor.defaultFormatter": "ms-python.python",
                    "editor.formatOnSave": true
                },
                "editor.codeActionsOnSave": {
                    "source.organizeImports": true,
                    "source.fixAll": true,
                    "source.fixAll.sortImports": true,
                    "source.fixAll.docformatter": true  // Добавлено для docformatter
                },
                "python.languageServer": "Pylance",
                "python.analysis.autoImportCompletions": true,
                "python.analysis.typeCheckingMode": "basic",
                "python.analysis.autoSearchPaths": true,
                "python.analysis.useLibraryCodeForTypes": true,
                "python.defaultInterpreterPath": "/usr/local/bin/python",
                "python.pip.downloadCache": "${containerWorkspaceFolder}/.pip-cache",
                "black-formatter.args": [
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "python.linting.enabled": true,
                "python.linting.pylintEnabled": true,
                "python.linting.pylintArgs": [
                    "--disable=C0111",
                    "--disable=C0103",
                    "--max-line-length=88",
                    "--good-names=i,j,k,ex,Run,_",
                    "--ignore-patterns=test_.*?py",
                    "--load-plugins=pylint.extensions.docparams"
                ],
                "isort.args": [
                    "--profile",
                    "black",
                    "--multi-line",
                    "3",
                    "--include-trailing-comma",
                    "--force-grid-wrap",
                    "0",
                    "--use-parentheses",
                    "--line-after-imports",
                    "--line-before-comment"
                ],
                "isort.check": true,
                "autoDocstring.docstringFormat": "google",
                "autoDocstring.startOnNewLine": true,
                "docformatter.args": [
                    "--in-place",
                    "--blank",
                    "--wrap-summaries",
                    "120",
                    "--wrap-descriptions",
                    "120"
                ],
                "python.analysis.diagnosticMode": "workspace",
                "python.analysis.importFormat": "relative",
                "python.linting.flake8Enabled": true,
                "python.linting.flake8Args": [
                    "--max-line-length=88",
                    "--ignore=E203,W503"  // Игнорирование конфликтующих правил
                ],
                "mypy.enabled": true,
                "mypy.runUsingActiveInterpreter": true,
                "mypy.args": [
                    "--strict"  // строгий режим проверки типов
                ],
                "python.testing.pytestEnabled": true,
                "python.testing.unittestEnabled": false,
                "python.testing.nosetestsEnabled": false,
                "python.testing.pytestArgs": ["tests"],
                
                "python.analysis.inlayHints.functionReturnTypes": true,
                "python.analysis.inlayHints.variableTypes": true,
                "python.analysis.packageIndexDepths": [
                    {"name": "sklearn", "depth": 2},
                    {"name": "matplotlib", "depth": 2},
                    {"name": "scipy", "depth": 2}
                ],
                
                "git.enableSmartCommit": true,
                "git.confirmSync": false,
                "git.autofetch": true,
                "gitlens.codeLens.enabled": true,
                
                "terminal.integrated.enablePersistentSessions": true,
                "terminal.integrated.scrollback": 5000,
                
                "debugging.autoExpandLazyVariables": true,
                "sonarlint.pathToNodeExecutable": "/usr/local/bin/node",
                "sonarlint.node.minVersion": "18.18.0"
            },
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "GitHub.copilot",
                "GitHub.copilot-chat",
                "ms-python.pylint",
                "ms-toolsai.jupyter",
                "mhutchie.git-graph",
                "eamodio.gitlens",
                "njpwerner.autodocstring",
                "ms-python.black-formatter",
                "ms-python.isort",
                "ms-python.flake8",
                "ms-python.mypy-type-checker",
                "ms-python.docformatter",
                "Continue.continue",
                "ms-kubernetes-tools.vscode-kubernetes-tools",
                "GitHub.vscode-pull-request-github",
                "ms-azuretools.vscode-docker",
                "ms-mssql.mssql",
                "DavidAnson.vscode-markdownlint",
                "mtxr.sqltools",
                "donjayamanne.githistory",
                "batisteo.vscode-django",
                "VisualStudioExptTeam.vscodeintellicode",
                "VisualStudioExptTeam.intellicode-api-usage-examples",
                "donjayamanne.python-extension-pack",
                "ms-vscode.vscode-speech-language-pack-uk-ua",
                "ms-python.autopep8",
                "ms-mssql.data-workspace-vscode",
                "dbaeumer.vscode-eslint",
                "ms-toolsai.vscode-jupyter-cell-tags",
                "ms-toolsai.jupyter-renderers",
                "ms-toolsai.vscode-jupyter-slideshow",
                "ms-python.debugpy",
                "donjayamanne.python-environment-manager",
                "MS-CEINTL.vscode-language-pack-ru",
                "ms-mssql.sql-bindings-vscode",
                "ms-mssql.sql-database-projects-vscode",
                "redhat.vscode-yaml",
                "wholroyd.jinja",
                "cstrap.flask-snippets",
                "wholroyd.jinja",
                "ms-toolsai.jupyter-keymap",
                "KevinRose.vsc-python-indent",
                "sonarsource.sonarlint-vscode",
                "streetsidesoftware.code-spell-checker",
                "yzhang.markdown-all-in-one"
            ]
        }
    },
    "remoteUser": "vscode",
    "mounts": [
        "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
    ],
    "forwardPorts": [
        5901,
        6080,
        11434
    ],
    "postStartCommand": "bash .devcontainer/start-vnc.sh",
    "remoteEnv": {
        "DISPLAY": ":1",
        "XDG_RUNTIME_DIR": "/tmp/runtime-vscode",
        "PATH": "/home/vscode/.local/bin:/usr/local/bin:${containerEnv:PATH}",
        "PYTHONPATH": "${containerWorkspaceFolder}",
        "TEMP": "/tmp",
        "TMP": "/tmp",
        "VNC_PASSWORD": "${localEnv:VNC_PASSWORD:password}"
    },
    "runArgs": [
        "--shm-size=1g",
        "--add-host=host.docker.internal:172.17.0.1",
        "--network=host",
        "--memory=4g",
        "--cpus=2"
    ]
}